{"version":3,"sources":["apis.js","components/TranslateHistoryList.js","components/TranslatePage.js","containers/Home.js","components/TranslateDetail.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","translateText","inputText","formData","FormData","append","axios","post","then","response","console","log","data","catch","error","getTargetDetail","idx","translateURL","get","TranslateHistoryList","state","items","loading","selectTargetTranslateHistory","recordId","_this","props","history","push","this","getTranslateHistoryList","results","setState","_context","t0","_this2","map","item","react_default","a","createElement","key","className","onClick","id","input_text","length","substring","language","translation","Component","TranslatePage","translatedText","onInputTextChange","e","target","value","translate","_callee","result","regenerator_default","wrap","prev","next","sent","stop","onChange","placeholder","disabled","Home","NavLink","to","components_TranslatePage","TranslateDetail","detail","getDetail","match","params","alert","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02c06bfc.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://52.87.247.76:8000/restapi\";\n\n// const API_URL = \"http://localhost:8000/restapi\";\n\nexport const getAllTranslateHistory = () => {\n  const historyURL = \"/translate/\";\n  const list = axios.get(API_URL + historyURL)\n                .then(response => response.data)\n                .catch(error => console.log(error));\n  return list;\n}\n\n\nexport const translateText = (inputText) => {\n  const translateURL = \"/translate/\";\n  const formData = new FormData();\n  formData.append('input_text', inputText);\n  const result = axios.post(API_URL + translateURL, formData)\n              .then(response => {\n                console.log(response);\n                return response.data;\n              })\n              .catch(error => console.log(error));\n  return result;\n}\n\nexport const getTargetDetail = (idx) => {\n  const translateURL = \"/translate/\" + idx + \"/\";\n  const result = axios.get(API_URL + translateURL)\n              .then(response => response.data)\n              .catch(error => console.log(error));\n  return result;\n}\n\n","import React, {Component} from \"react\";\nimport {getAllTranslateHistory} from \"../apis\";\nimport \"../styles/TranslateHistoryList.css\";\nclass TranslateHistoryList extends Component {\n  state={\n    items: [],\n    loading: true\n  }\n\n  componentDidMount() {\n    this.getTranslateHistoryList();\n  }\n\n  async getTranslateHistoryList() {\n    try {\n      const results = await getAllTranslateHistory();\n      this.setState({items: results}); \n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.setState({loading: false})\n    }\n  }\n\n  selectTargetTranslateHistory = (recordId) => {\n    this.props.history.push('/detail/' + recordId);\n  }\n\n  render() {\n    const items = this.state.items && this.state.items.map((item, idx) => {\n      return(\n        <tr key={idx} className=\"table-tr\" onClick={() => this.selectTargetTranslateHistory(item.id)}>\n          <td>{item.id}</td>\n          {item.input_text.length > 500 ? \n            <td>{item.input_text.substring(0, 400) + \"...\"}</td> \n            : \n            <td>{item.input_text}</td>\n          }\n          <td>{item.language}</td>\n          {item.translation.length > 500 ? \n            <td>{item.translation.substring(0, 500) + \"...\"}</td> \n            : \n            <td>{item.translation}</td>\n          }\n        </tr>\n        );\n      });\n\n    return(\n      <div>\n        <div className=\"note\">* Click each row to view translation detail!</div>\n        {this.state.loading\n          ?\n          <div>Loading...</div>\n          :\n          <table className=\"list-table\">\n            <tbody>\n              <tr className=\"table-headers\">\n                <th className=\"narrow-column table-header\">ID</th>\n                <th className=\"wide-column table-header\">Input Text</th>\n                <th className=\"narrow-column table-header\">Detected Language</th>\n                <th className=\"wide-column table-header\">Translated Text</th>\n              </tr>\n              {items.length > 0 && items}\n            </tbody>\n          </table>\n        }\n        {!this.state.loading && items.length === 0 && <span className=\"welcome-message\">View previously translated words and phrases here!</span>}\n      </div>\n    );\n  }\n}\n\nexport default TranslateHistoryList;","import React, {Component} from \"react\";\nimport {translateText} from \"../apis\";\nimport \"../styles/TranslatePage.css\";\nclass TranslatePage extends Component {\n  state={\n    items: [],\n    loading: true,\n    inputText: '',\n    translatedText: ''\n  }\n\n  onInputTextChange = (e) => {\n    this.setState({inputText: e.target.value});\n  }\n\n  translate = async () => {\n    try {\n      const result = await translateText(this.state.inputText);\n      this.setState({translatedText: result.translation})\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return(\n        <div className=\"translate-page-container\">\n            <div className=\"translate-text-area-container\">\n                <textarea \n                  className=\"text-area input-text-area\" \n                  onChange={this.onInputTextChange} \n                  value={this.state.inputText}\n                  placeholder=\"Please input the sentence you want to translate!\"\n                >\n                </textarea>\n                <textarea \n                  className=\"text-area translated-text-area\" \n                  value={this.state.translatedText}\n                  placeholder=\"Translation result! The result cannot be changed!\"\n                  disabled\n                >\n                </textarea>\n            </div>\n            <button className=\"my-button button-translate\" onClick={this.translate}>Translate</button>\n        </div>\n    );\n  }\n}\n\nexport default TranslatePage;","import React, {Component} from \"react\";\r\nimport TranslatePage from \"../components/TranslatePage\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"../styles/Home.css\";\r\n\r\nclass Home extends Component {\r\n    render () {\r\n        return (\r\n            <div>\r\n                <div className=\"button-container\">\r\n                    <button className=\"my-button button-translate\">\r\n                        <NavLink to=\"/translateHistory\" className=\"link-text\">Check Translate History</NavLink>\r\n                    </button>\r\n                </div>\r\n                \r\n                <TranslatePage/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from \"react\";\r\nimport {getTargetDetail} from \"../apis.js\";\r\n\r\nclass TranslateDetail extends Component {\r\n    state = {\r\n        detail: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getDetail();\r\n    }\r\n\r\n    async getDetail() {\r\n        let id = this.props.match.params.id;\r\n        try {\r\n            const result = await getTargetDetail(id);\r\n            this.setState({detail: result}); \r\n        } catch (error) {\r\n            console.log(\"error\");\r\n            console.log(error);\r\n            alert(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.detail && \r\n                    <table className=\"list-table\">\r\n                        <tbody>\r\n                            <tr className=\"table-headers\">\r\n                                <th className=\"wide-column table-header\">Input Text</th>\r\n                                <th className=\"wide-column table-header\">Translated Text</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{this.state.detail.input_text}</td>\r\n                                <td>{this.state.detail.translation}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TranslateDetail;","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport TranslateHistoryList from \"./components/TranslateHistoryList\";\nimport TranslatePage from \"./components/TranslatePage\"\nimport Home from \"./containers/Home\";\nimport { NavLink } from \"react-router-dom\";\nimport TranslateDetail from \"./components/TranslateDetail\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <h2 className=\"container-home\">\n              <NavLink to=\"/\" className=\"container-title\">Translator</NavLink>    \n          </h2>\n          <p className=\"note\">*Click title to return homepage!</p>\n          <Switch>\n            <Route exact path=\"/\" component={Home}/>\n            <Route exact path=\"/translate\" component={TranslatePage}/>\n            <Route exact path=\"/translateHistory\" component={TranslateHistoryList}/>\n            <Route exact path=\"/detail/:id\" component={TranslateDetail}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}